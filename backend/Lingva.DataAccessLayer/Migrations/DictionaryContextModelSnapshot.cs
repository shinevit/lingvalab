// <auto-generated />
using System;
using Lingva.DataAccessLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lingva.DataAccessLayer.Migrations
{
    [DbContext(typeof(DictionaryContext))]
    partial class DictionaryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.DictionaryEnWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("DictionaryEnWords");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.DictionaryRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Context")
                        .HasMaxLength(200);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.Property<string>("OriginalPhraseName");

                    b.Property<string>("Picture");

                    b.Property<string>("Translation")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TranslationLanguageName");

                    b.Property<int>("UserId");

                    b.Property<string>("WordName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("OriginalPhraseName");

                    b.HasIndex("TranslationLanguageName");

                    b.HasIndex("UserId");

                    b.ToTable("DictionaryRecords");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date");

                    b.Property<int?>("FilmId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<int?>("SubtitleId");

                    b.Property<string>("Tag")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.HasIndex("SubtitleId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Film", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GengeId");

                    b.Property<int?>("GenreId");

                    b.Property<string>("LanguageName")
                        .HasMaxLength(3);

                    b.Property<string>("Link")
                        .HasMaxLength(250);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PosterLink")
                        .HasMaxLength(250);

                    b.HasKey("Id");

                    b.HasIndex("GenreId");

                    b.ToTable("Films");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(30);

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Group", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EventId");

                    b.Property<string>("RoleName")
                        .HasMaxLength(100);

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("RoleName");

                    b.HasIndex("UserId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Language", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(3);

                    b.HasKey("Name");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.ParserWord", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100);

                    b.Property<string>("LanguageName")
                        .HasMaxLength(3);

                    b.Property<int?>("SubtitleRowId");

                    b.HasKey("Name");

                    b.HasIndex("SubtitleRowId");

                    b.ToTable("ParserWords");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Role", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100);

                    b.HasKey("Name");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.SimpleEnWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("SimpleEnWords");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Subtitle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FilmId");

                    b.Property<string>("LanguageName");

                    b.Property<string>("Path")
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("FilmId");

                    b.ToTable("Subtitles");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.SubtitleRow", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<TimeSpan>("EndTime");

                    b.Property<string>("LanguageName");

                    b.Property<TimeSpan>("StartTime");

                    b.Property<int?>("SubtitleId");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.HasIndex("SubtitleId");

                    b.ToTable("SubtitleRows");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("LastName");

                    b.Property<byte[]>("PasswordHash")
                        .HasMaxLength(16);

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("Username");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Word", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100);

                    b.Property<string>("LanguageName")
                        .IsRequired()
                        .HasMaxLength(3);

                    b.HasKey("Name");

                    b.HasIndex("LanguageName");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.DictionaryRecord", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.Word", "Word")
                        .WithMany("DictionaryRecords")
                        .HasForeignKey("OriginalPhraseName");

                    b.HasOne("Lingva.DataAccessLayer.Entities.Language", "Language")
                        .WithMany("TranslationDictionary")
                        .HasForeignKey("TranslationLanguageName");

                    b.HasOne("Lingva.DataAccessLayer.Entities.User", "User")
                        .WithMany("UserDictionaryRecords")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Event", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.Film", "Film")
                        .WithMany("Events")
                        .HasForeignKey("FilmId");

                    b.HasOne("Lingva.DataAccessLayer.Entities.Subtitle", "Subtitle")
                        .WithMany("Events")
                        .HasForeignKey("SubtitleId");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Film", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.Genre", "Genre")
                        .WithMany("Films")
                        .HasForeignKey("GenreId");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Group", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId");

                    b.HasOne("Lingva.DataAccessLayer.Entities.Role", "Role")
                        .WithMany("Groups")
                        .HasForeignKey("RoleName");

                    b.HasOne("Lingva.DataAccessLayer.Entities.User", "Users")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.ParserWord", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.SubtitleRow", "SubtitleRow")
                        .WithMany("ParserWords")
                        .HasForeignKey("SubtitleRowId");
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Subtitle", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.Film", "Film")
                        .WithMany("Subtitles")
                        .HasForeignKey("FilmId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.SubtitleRow", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.Subtitle", "Subtitles")
                        .WithMany("SubtitlesRow")
                        .HasForeignKey("SubtitleId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Lingva.DataAccessLayer.Entities.Word", b =>
                {
                    b.HasOne("Lingva.DataAccessLayer.Entities.Language", "Language")
                        .WithMany("Words")
                        .HasForeignKey("LanguageName")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
